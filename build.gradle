import org.flywaydb.gradle.task.FlywayCleanTask
import org.flywaydb.gradle.task.FlywayInfoTask
import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
    id "java"
    id "org.springframework.boot" version "2.1.1.RELEASE"
    id "org.flywaydb.flyway" version "5.2.4"
}

repositories {
    mavenCentral()
}

ext {
    springBootVersion = '2.1.1.RELEASE'
    mysqlConnectorJavaVersion = '8.0.11'
    jacksonDatatypeJsr310Version = '2.9.8'
    lombokVersion = '1.18.4'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion")

    compile("mysql:mysql-connector-java:$mysqlConnectorJavaVersion")

    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatatypeJsr310Version")

    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")

    compile("org.springframework.boot:spring-boot-starter-security:$springBootVersion")

    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    compileOnly("org.projectlombok:lombok:$lombokVersion")

    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
}

springBoot {
    buildInfo()
}

def devDbUrl = "jdbc:mysql://localhost:3306/ADDRESS_BOOK_DEV?user=address_book&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
bootRun.environment([
        "WELCOME_MESSAGE": "hello",
        "SPRING_DATASOURCE_URL": devDbUrl,
        "MANAGEMENT_SECURITY_ENABLED": false,
        "HTTPS_DISABLED": true
])

def testDbUrl = "jdbc:mysql://localhost:3306/ADDRESS_BOOK_TEST?user=address_book&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
test.environment([
        "WELCOME_MESSAGE": "Hello from test",
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_SECURITY_ENABLED": false,
        "HTTPS_DISABLED": true
])

flyway {
    url = devDbUrl
    user = "address_book"
    password = ""
    locations = ["filesystem:databases/address-book/migrations"]
}

task testClean(type: FlywayCleanTask) {
    url = testDbUrl
}

task testInfo(type: FlywayInfoTask) {
    url = testDbUrl
}

task testMigrate(type: FlywayMigrateTask) {
    url = testDbUrl
}

task devClean(type: FlywayCleanTask) {
    url = devDbUrl
}

task devInfo(type: FlywayInfoTask) {
    url = devDbUrl
}

task devMigrate(type: FlywayMigrateTask) {
    url = devDbUrl
}